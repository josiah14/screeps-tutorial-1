"use strict";

var _ = require('lodash');

module.exports = function (objectIntents, roomObjects, roomTerrain, bulk, bulkUsers, roomController, flags, flagsBulk) {

    flags.forEach(function (i) {
        i._parsed = i.data.split("|");
        i._parsed = _.map(i._parsed, function (j) {
            return j.split("~");
        });
    });

    if (objectIntents.removeFlag) {
        _.forEach(objectIntents.removeFlag, function (i) {
            require('./remove-flag')(i, flags);
        });
    }
    if (objectIntents.createFlag) {
        _.forEach(objectIntents.createFlag, function (i) {
            require('./create-flag')(i, flags);
        });
    }
    if (objectIntents.createConstructionSite) {
        _.forEach(objectIntents.createConstructionSite, function (i) {
            require('./create-construction-site')(i, roomObjects, roomTerrain, bulk, bulkUsers, roomController);
        });
    }
    if (objectIntents.destroyStructure) {
        _.forEach(objectIntents.destroyStructure, function (i) {
            require('./destroy-structure')(i, roomObjects, roomTerrain, bulk, bulkUsers, roomController);
        });
    }

    if (objectIntents.genEnergy) {
        require('./gen-energy')(objectIntents.genEnergy, roomObjects, roomTerrain, bulk, bulkUsers, roomController);
    }

    flags.forEach(function (i) {
        if (i._modified) {
            var data = _.map(i._parsed, function (j) {
                return j.join("~");
            }).join("|");

            if (i._id) {
                flagsBulk.update(i._id, { data: data });
            } else {
                flagsBulk.insert({ data: data, user: i.user, room: i.room });
            }
        }
    });
};
//# sourceMappingURL=../../../sourcemaps/processor/intents/room/intents.js.map
